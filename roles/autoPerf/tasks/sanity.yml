---
- name: Checking if any benchmarking tool is running on client
  shell: ps -ef | grep -v grep | grep "s3bench\|hsbench\|benchmark.sh" | awk '{print $2}'
  register: result
  ignore_errors: yes
  delegate_to: clientnode-1

- name: Printing the process IDs obtained
  debug: msg="Options of result :{{ result }}"

- name: Fail when ansible process found
  when: result.stdout | length > 0
  fail: msg="One of the performance tool is running on client. Either wait for it or stop it to submit new job"

- name: "Sanity Check (Nodes and clients): Installing NTP "
  yum:
    name:
      - ntp
    state: present
  delegate_to: "{{ item }}"
  with_items: "{{ groups['all'] }}"

- name: "Sanity Check (Nodes and clients): NTP Service start|stop|restart"
  shell: systemctl stop ntpd ; /usr/sbin/ntpdate {{ time_endpoint }} ; systemctl start ntpd
  delegate_to: "{{ item }}"
  with_items: "{{ groups['all'] }}"

- name: Sanity check (client)
  block:
    - name: "Searching for S3 endpoint - {{ s3_endpoint }} entry in '/etc/hosts' file"
      shell: "grep {{ s3_endpoint }} /etc/hosts"
      register: result
      ignore_errors: yes
      no_log: True
      delegate_to: "clientnode-1"

    - name: "'Failuers' detector in above result for searching entry in '/etc/hosts' file"
      when: result.rc != 0
      fail: msg="{{ s3_endpoint }} entry not found in  '/etc/hosts' file"


    - name: "Checking S3 endpoint - {{ s3_endpoint }} is reachable or not"
      shell: "ping -c 1 {{ s3_endpoint }}"
      register: result
      ignore_errors: yes
      no_log: True
      delegate_to: "clientnode-1"

    - name: "'Failuers' detector in above result for checking S3 endpoint - {{ s3_endpoint }} is reachable or not"
      when: result.rc != 0
      fail: msg="{{ s3_endpoint }} is not reachable, one possible reason can be the S3 endpoint entry is commented in '/etc/hosts' file"

    - name: "Checking 'aws' package installed or not"
      shell: "pip3 list | grep aws || rpm -qa | grep -v grep | grep aws" 
      register: result
      ignore_errors: yes
      no_log: True
      delegate_to: "clientnode-1"

    - name: "'Failures' detector in above result for checking 'aws' package installed or not "
      when: result.rc != 0
      fail: msg="aws package is not installed, please install aws package on client"

    - name: "Checking 'aws' is configured or not on client"
      shell: "aws s3 ls"
      register: result
      ignore_errors: yes
      no_log: True
      delegate_to: "clientnode-1"

    - name: "'Failures' detector in above result for checking aws is configured or not on client"
      when: result.rc != 0
      fail: msg="Please configure aws on client"
 
